#include <stdio.h>
#define SIZE 100

int stack[SIZE], top = -1;

void push(int val) {
    if(top < SIZE - 1)
        stack[++top] = val;
}

int pop() {
    if(top >= 0) return stack[top--];
    return -1;
}

void display() {
    for(int i = top; i >= 0; i--)
        printf("%d ", stack[i]);
}

int main() {
    push(10); push(20); push(30);
    display();
    printf("\n%d", pop());
    return 0;
}


//for linked list


#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *top = NULL;

void push(int val) {
    struct Node *temp = malloc(sizeof(struct Node));
    temp->data = val;
    temp->next = top;
    top = temp;
}

int pop() {
    if(top == NULL) return -1;
    int val = top->data;
    struct Node *temp = top;
    top = top->next;
    free(temp);
    return val;
}

void display() {
    struct Node *temp = top;
    while(temp) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
}

int main() {
    push(10); push(20); push(30);
    display();
    printf("\n%d", pop());
    return 0;
}
