#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

void traverse(struct Node *head) {
    while(head) {
        printf("%d ", head->data);
        head = head->next;
    }
}

struct Node* insert(struct Node *head, int data) {
    struct Node *newNode = malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = head;
    return newNode;
}

struct Node* delete(struct Node *head, int key) {
    struct Node *temp = head, *prev = NULL;
    if(temp && temp->data == key) {
        head = temp->next;
        free(temp);
        return head;
    }
    while(temp && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }
    if(temp == NULL) return head;
    prev->next = temp->next;
    free(temp);
    return head;
}

void search(struct Node *head, int key) {
    while(head) {
        if(head->data == key) {
            printf("Found\n");
            return;
        }
        head = head->next;
    }
    printf("Not found\n");
}

struct Node* reverse(struct Node *head) {
    struct Node *prev = NULL, *curr = head, *next;
    while(curr) {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    return prev;
}

int main() {
    struct Node *head = NULL;
    head = insert(head, 10);
    head = insert(head, 20);
    head = insert(head, 30);
    traverse(head);
    printf("\n");
    search(head, 20);
    head = delete(head, 20);
    traverse(head);
    printf("\n");
    head = reverse(head);
    traverse(head);
    return 0;
}
